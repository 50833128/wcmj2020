<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>我對不起你 嚴嘉銘老師 - Misc</title><link href="./" rel="alternate"></link><link href=".%5Cfeeds/misc.atom.xml" rel="self"></link><id>./</id><updated>2020-06-19T02:52:00+08:00</updated><entry><title>Github fork</title><link href=".%5CGithub1.html" rel="alternate"></link><published>2020-06-19T02:52:00+08:00</published><updated>2020-06-19T02:52:00+08:00</updated><author><name>yen</name></author><id>tag:None,2020-06-19:.\Github1.html</id><summary type="html"></summary><content type="html">&lt;!-- PELICAN_END_SUMMARY --&gt;

&lt;h2&gt;簡介 fork(分支倉庫&lt;/h2&gt;
&lt;p&gt;簡單來講 fork 有點像 google drive的共用功能:&lt;/p&gt;
&lt;p&gt;公開倉儲和fork的差別:&lt;/p&gt;
&lt;p&gt;公開倉儲:你是參與者，並且可以修改專案內容，你也是開發者的一個。&lt;/p&gt;
&lt;p&gt;fork(分支倉儲:有點像mc裡面的模組 ，可以享用程式碼的功能，clone 別人的程式碼，也就是可以享用別人的成果，而自己的成果也能在上面被分享。等於是複製下來。&lt;/p&gt;
&lt;p&gt;&lt;a herh="https://github.com/oldratlee/translations/blob/master/git-workflows-and-tutorials/workflow-forking.md"&gt; github.com/oldratlee/translations/git-workflows-and-tutorials/workflow-forking.md&lt;img src="https://pic4.zhimg.com/50/v2-ba2bd4a27309817623b56acae1939767_hd.jpg" data-caption="" data-size="normal" data-rawwidth="400" data-rawheight="344" class="content_image" width="400"/&gt;&lt;/p&gt;
&lt;p&gt;作者：李鼎
链接：https://www.zhihu.com/question/20431718/answer/74250205
来源：知乎
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。&lt;/a&gt;&lt;/p&gt;</content><category term="Misc"></category><category term="2020 github fork"></category></entry><entry><title>Github 貢獻值</title><link href=".%5CGithub.html" rel="alternate"></link><published>2020-06-19T01:48:00+08:00</published><updated>2020-06-19T01:48:00+08:00</updated><author><name>yen</name></author><id>tag:None,2020-06-19:.\Github.html</id><summary type="html"></summary><content type="html">&lt;!-- PELICAN_END_SUMMARY --&gt;

&lt;h2&gt;貢獻的計算&lt;/h2&gt;
&lt;p&gt;Github 官方協助文章&lt;/p&gt;
&lt;p&gt;原文文章&lt;/p&gt;
&lt;p&gt;&lt;a href="https://help.github.com/articles/why-are-my-contributions-not-showing-up-on-my-profile/"&gt;https://help.github.com/articles/why-are-my-contributions-not-showing-up-on-my-profile/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;貢獻的計算大概跟下列幾個項目有關&lt;/p&gt;
&lt;p&gt;1.綁定在github上的電子郵件&lt;/p&gt;
&lt;p&gt;2.倉儲的獨立性(好像是&lt;/p&gt;
&lt;p&gt;3.倉儲的使用者(創建人&lt;/p&gt;
&lt;p&gt;原因:
1.綁定電子郵件:推送出去的資料是綁的什麼帳號
(綁定誰的&lt;/p&gt;
&lt;p&gt;2.倉儲的使用權限(公開或是私人，就是這個專案做過的人有誰，抑或是做了什麼過程(我們班設定的都是私人的&lt;/p&gt;
&lt;p&gt;3.使用者基本上就是你自己&lt;/p&gt;
&lt;p&gt;原文參考
(翻譯不好請勿見怪
&lt;a href="https://help.github.com/articles/why-are-my-contributions-not-showing-up-on-my-profile/"&gt;https://help.github.com/articles/why-are-my-contributions-not-showing-up-on-my-profile/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;補救方案:&lt;/p&gt;
&lt;p&gt;下面這則文章大概是在說如何修改 提交紀錄中作者的 名稱及電子郵件 
不過要更改的話請慎重 因為更改的是你整個github倉儲的歷史
警告:
這個步驟對github倉儲有一定程度的破壞性 尤其是共用倉儲或是公開倉儲 盡量在危急時刻才修改(不過我不知道甚麼破壞性啦哈哈&lt;/p&gt;
&lt;p&gt;原文文章:&lt;a href="https://help.github.com/articles/changing-author-info/"&gt;https://help.github.com/articles/changing-author-info/&lt;/a&gt;&lt;/p&gt;</content><category term="Misc"></category><category term="2018 mother fucker"></category></entry><entry><title>渣男的常用招數</title><link href=".%5CTrash%20man.html" rel="alternate"></link><published>2020-05-22T21:09:00+08:00</published><updated>2020-05-22T21:09:00+08:00</updated><author><name>yen</name></author><id>tag:None,2020-05-22:.\Trash man.html</id><summary type="html"></summary><content type="html">&lt;!-- PELICAN_END_SUMMARY --&gt;

&lt;h2&gt;他們騙妹妹的招數也就那幾招而已&lt;/h2&gt;
&lt;p&gt;1.我只有跟你聊而已:裝的自己多與世無爭一樣
2.認識幾天馬上告白:然後幾天後就丟掉
3.裝專情:與世無爭怎麼可能喜歡其他妹妹嘛
4.跟每個女的都講一樣的話:女生就愛聽那幾句甜言蜜語
5.臉書包裝得非常好完全看不出他很渣:臉書是有多難辦??
6.跟妳出去從不打卡:要假就假到底
7.我單身很久了:幾歲了謊話還這麼不成熟
8.我覺得妳很特別:每個人都嘛很特別
9.我跟別的男生不一樣:心裡壞掉的那種
10.我只約妳而已:恁爸時間管理大師餒&lt;/p&gt;</content><category term="Misc"></category><category term="2018  Summer FK"></category></entry><entry><title>之前的分組結果</title><link href=".%5CGroup%20finail.html" rel="alternate"></link><published>2020-05-22T15:00:00+08:00</published><updated>2020-05-22T15:00:00+08:00</updated><author><name>yen</name></author><id>tag:None,2020-05-22:.\Group finail.html</id><summary type="html"></summary><content type="html">&lt;!-- PELICAN_END_SUMMARY --&gt;

&lt;p&gt;group 1 
50833110
50833112
50833115
50833123
50833127
50833128
50833129
50833131
50833133
50833138&lt;/p&gt;
&lt;p&gt;group 2 
50833101
50833107
50833108
50833111
50833117
50833119
50833122
50833126
50833130
50833134&lt;/p&gt;
&lt;p&gt;group 3 
50833104
50833106
50833113
50833114
50833116
50833118
50833120
50833125
50833140
50833141&lt;/p&gt;
&lt;p&gt;group 4 
50833102
50833103
50833105
50833109
50833121
50833124
50833135
50833136
50833137
50833139&lt;/p&gt;</content><category term="Misc"></category><category term="2018  Summer LP"></category></entry><entry><title>2018 Fall CP 課程</title><link href=".%5C2018-Fall-32-bit-Windows.html" rel="alternate"></link><published>2018-09-10T11:00:00+08:00</published><updated>2018-09-10T11:00:00+08:00</updated><author><name>yen</name></author><id>tag:None,2018-09-10:.\2018-Fall-32-bit-Windows.html</id><summary type="html">&lt;p&gt;2018 Fall 一開始, 在一台已經 10 年的 32 位元的 Windows 7 操作系統中工作. 可攜的 Python 3.7.0 仍然可以配置, Leo Editor、PyQt5、flask、Markdown、pelican 與 bs4 的安裝, 也都沒有問題. 只有 Eric6 因為缺少必要模組與 Python 3.7.0 對應的 pyqt5-tools, 因此沒有安裝.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2018 Fall 一開始, 在一台已經 10 年的 32 位元的 Windows 7 操作系統中工作. 可攜的 Python 3.7.0 仍然可以配置, Leo Editor、PyQt5、flask、Markdown、pelican 與 bs4 的安裝, 也都沒有問題. 只有 Eric6 因為缺少必要模組與 Python 3.7.0 對應的 pyqt5-tools, 因此沒有安裝.&lt;/p&gt;


&lt;h2&gt;電腦規格&lt;/h2&gt;
&lt;p&gt;目前系上已經沒有 32 位元 Windows 操作系統的電腦, 所以先前只要有學生提到所使用的電腦是舊型 32 位元的 Windows XP 或 Windows 7, 都無法提供相應的可攜程式系統.&lt;/p&gt;
&lt;p&gt;但是, 當您桌上就只一台早期 Sony 推出的 VGC-LM26T 電腦, 採用 Intel core 2 Duo T8100 2.1 GHz 裝載 32 位元 Windows 7, 記憶體只有 2GB 的老舊電腦.&lt;/p&gt;
&lt;p&gt;夠用嗎?&lt;/p&gt;
&lt;p&gt;當然可以, 使用的是特別製作的 &lt;a href="https://mde1a1.kmol.info/2017fall/raw/p37_32.7z?name=c272a694f98180f8d1272b43f7d7b4fdd8f7f550"&gt;32 位元可攜系統&lt;/a&gt;, 除了不支援 Eric6 之外, 其餘功能都與 64 位元的  &lt;a href="https://drive.google.com/file/d/1DWtyoUhl8CycKJ8uulB3viRXE39KqpE1/view?usp=sharing"&gt;p37&lt;/a&gt; 相同.&lt;/p&gt;
&lt;h2&gt;工作流程&lt;/h2&gt;
&lt;p&gt;從 2018 Fall 開始, 前半學期希望每位計算機程課程的學員, 都能透過 &lt;a href="http://mde.tw/cp2018/content/"&gt;2018 計算機程式教材&lt;/a&gt; 內容, 深入學習 Python 3 各種程式語法, 利用 &lt;a href="https://github.com/chiamingyen/cmsimfly"&gt;CMSimfly&lt;/a&gt;、&lt;a href="https://github.com/getpelican/pelican"&gt;Pelican&lt;/a&gt; 與 &lt;a href="https://revealjs.com/"&gt;Reveal.js&lt;/a&gt;, 熟悉如何在 &lt;a href="https://github.com/"&gt;Github&lt;/a&gt; 配置自己的網站、網誌與網際簡報系統.&lt;/p&gt;
&lt;p&gt;使用時, 啟動隨身系統的 start.bat, 利用命令列指令, git clone https://github.com/mdecourse/2018fall, 然後將內容配置在各自的 &lt;a href="https://github.com/"&gt;Github&lt;/a&gt; 帳號下.&lt;/p&gt;
&lt;h2&gt;程式專案&lt;/h2&gt;
&lt;p&gt;早在 1999 年, 就已經開始進行所謂&lt;a href="https://webcache.googleusercontent.com/search?q=cache:sqYPNC8_mgoJ:https://www.most.gov.tw/sci/ch/detail%3Farticle_uid%3D4ee546e6-73fa-43a8-b1df-a5a0a1fe1824%26menu_id%3D0bac23e6-b3df-4fe0-b152-2e1050eb2f2c%26content_type%3DP%26view_mode%3DlistView+&amp;amp;cd=6&amp;amp;hl=zh-TW&amp;amp;ct=clnk&amp;amp;gl=tw"&gt;網際機械設計資源中心&lt;/a&gt;的構建, 想像中的資源中心是一套網際專家系統, 包含各式機械設計流程中所需的模組, 全部依附在一個相對穩定, 可以持續改進的核心架構下, 類似 &lt;a href="https://github.com/jhpyle/docassemble"&gt;docassemble&lt;/a&gt; 的一套系統.&lt;/p&gt;
&lt;p&gt;將近二十年過去, &lt;a href="https://webcache.googleusercontent.com/search?q=cache:sqYPNC8_mgoJ:https://www.most.gov.tw/sci/ch/detail%3Farticle_uid%3D4ee546e6-73fa-43a8-b1df-a5a0a1fe1824%26menu_id%3D0bac23e6-b3df-4fe0-b152-2e1050eb2f2c%26content_type%3DP%26view_mode%3DlistView+&amp;amp;cd=6&amp;amp;hl=zh-TW&amp;amp;ct=clnk&amp;amp;gl=tw"&gt;網際機械設計資源中心&lt;/a&gt;始終仍只有片段系統, 其中包含 &lt;a href="https://github.com/chiamingyen/cmsimfly"&gt;CMSimfly&lt;/a&gt;、&lt;a href="https://github.com/chiamingyen/pygrouf"&gt;Pygrouf&lt;/a&gt; 與 &lt;a href="https://github.com/KmolYuan/Pyslvs-PyQt5"&gt;Pyslvs&lt;/a&gt; (&lt;a href="http://www.pyslvs.com/content/"&gt;Pyslvs 手冊&lt;/a&gt;)等相關專案.&lt;/p&gt;
&lt;p&gt;就如同&lt;a href="http://blog.ez2learn.com/2009/06/27/how-to-write-useful-program/"&gt;如何寫出有用的程式?&lt;/a&gt; 一文中所述, "沒有興趣不要來念資工" 是一句非常貼切的警語, 當學生對於程式設計提不起興趣, 沒有將所學的各式語法、資料結構與演算法, 套用在自己非常有興趣的領域中, 用來解決各式問題的話, 日復一日, 我們還是寫不出任何有用的程式!&lt;/p&gt;
&lt;h2&gt;早該起頭的重要工作&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://www.quora.com/Why-is-programming-so-important-in-the-modern-world"&gt;計算機程式的重要性&lt;/a&gt;其實已經無需爭辯, 人類未來的許多工作都是透過網路與數位運算達成, 既知趨勢如此, 每一位工程師就該越早起頭原本就該進行的重要工作, 透過計算機程式來解決問題, 構築一個值得長期投注心力的程式專案.&lt;/p&gt;</content><category term="Misc"></category><category term="2018FallCP"></category></entry></feed>